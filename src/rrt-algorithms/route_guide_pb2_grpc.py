# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import route_guide_pb2 as route__guide__pb2


class RouteGuideStub(object):
  """Interface exported by the server.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddObstacles = channel.unary_unary(
        '/routeguide.RouteGuide/AddObstacles',
        request_serializer=route__guide__pb2.Points.SerializeToString,
        response_deserializer=route__guide__pb2.Obstacles.FromString,
        )
    self.GetRrtRoute = channel.unary_unary(
        '/routeguide.RouteGuide/GetRrtRoute',
        request_serializer=route__guide__pb2.Points.SerializeToString,
        response_deserializer=route__guide__pb2.Points.FromString,
        )


class RouteGuideServicer(object):
  """Interface exported by the server.
  """

  def AddObstacles(self, request, context):
    """A simple RPC.

    Obtains the feature at a given position.

    A feature with an empty name is returned if there's no feature at the given
    position.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRrtRoute(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_RouteGuideServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddObstacles': grpc.unary_unary_rpc_method_handler(
          servicer.AddObstacles,
          request_deserializer=route__guide__pb2.Points.FromString,
          response_serializer=route__guide__pb2.Obstacles.SerializeToString,
      ),
      'GetRrtRoute': grpc.unary_unary_rpc_method_handler(
          servicer.GetRrtRoute,
          request_deserializer=route__guide__pb2.Points.FromString,
          response_serializer=route__guide__pb2.Points.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'routeguide.RouteGuide', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
